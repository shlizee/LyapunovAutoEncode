 
  
 }} 
  
  
 
 ''The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary'' (abbreviated ''CatB'') is an essay, and later a book, by Eric S. Raymond on software engineering methods, based on his observations of the Linux kernel development process and his experiences managing an Open-source model|open source project, fetchmail. It examines the struggle between top-down and bottom-up design. The essay was first presented by the author at the Linux Kongress on May 27, 1997 in Würzburg (Germany) and was published as part of the book in 1999. 
 
 The illustration on the cover of the book is a 1913 painting by Liubov Popova#Development of style: Cubo-Futurism|Liubov Popova titled ''Composition with Figures'' and belongs to the collection of the State Tretyakov Gallery.    
 The book was released under the Open Publication License v2.0 in 1999.  [ cathedral-bazaar]  
 
 == " The Cathedral and the Bazaar " == 
 The essay contrasts two different free software development models: 
 
 * The ''Cathedral'' model, in which source code is available with each software release, but code developed between releases is restricted to an exclusive group of software developers. GNU Emacs and GNU Compiler Collection|GCC were presented as examples. 
 * The ''Bazaar'' model, in which the code is developed over the Internet in view of the public. Raymond credits Linus Torvalds, leader of the Linux kernel project, as the inventor of this process. Raymond also provides anecdotal accounts of his own implementation of this model for the Fetchmail project. 
 
 The essay's central thesis is Raymond's proposition that  " given enough eyeballs, all computer bug|bugs are shallow "  (which he terms Linus's law): Marketplace of ideas|the more widely available the source code is for public testing, scrutiny, and experimentation, the more rapidly all forms of bugs will be discovered. In contrast, Raymond claims that an inordinate amount of time and energy must be spent hunting for bugs in the Cathedral model, since the working version of the code is available only to a few developers. 
 
 ==Lessons for creating good open source software== 
 
 Raymond points to 19  " lessons "  learned from various software development efforts, each describing attributes associated with good practice in open source software development:    
 #Every good work of software starts by scratching a developer's personal itch. 
 #Good programmers know what to write. Great ones know what to rewrite (and reuse). 
 #Plan to throw one [version] away; you will, anyhow (copied from Frederick Brooks's ''The Mythical Man-Month''). 
 #If you have the right attitude, interesting problems will find you. 
 #When you lose interest in a program, your last duty to it is to hand it off to a competent successor. 
 #Treating your users as co-developers is your least-hassle route to rapid code improvement and effective debugging. 
 #Release early, release often|Release early. Release often. And listen to your customers. 
 #Given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix obvious to someone. 
 #Smart data structures and dumb code works a lot better than the other way around. 
 #If you treat your beta-testers as if they're your most valuable resource, they will respond by becoming your most valuable resource. 
 #The next best thing to having good ideas is recognizing good ideas from your users. Sometimes the latter is better. 
 #Often, the most striking and innovative solutions come from realizing that your concept of the problem was wrong. 
 #Perfection (in design) is achieved not when there is nothing more to add, but rather when there is nothing more to take away. (Attributed to Antoine de Saint-Exupéry) 
 #Any tool should be useful in the expected way, but a truly great tool lends itself to uses you never expected. 
 #When writing gateway software of any kind, take pains to disturb the data stream as little as possible—and never throw away information unless the recipient forces you to! 
 #When your language is nowhere near Turing completeness|Turing-complete, syntactic sugar can be your friend. 
 #A security system is only as secure as its secret. Beware of pseudo-secrets. 
 #To solve an interesting problem, start by finding a problem that is interesting to you. 
 #Provided the development coordinator has a communications medium at least as good as the Internet, and knows how to lead without coercion, many heads are inevitably better than one. 
 
 ==Legacy and reception== 
 In 1998, the essay helped the final push for Netscape Communications Corporation to release the source code for Netscape Communicator and start the Mozilla project; it was cited by Frank Hecker and other employees as an outside independent validation of his arguments.           Netscape's public recognition of this influence brought Raymond renown in hacker culture.    
 
 When O'Reilly Media published the book in 1999, it became one of the first (if not the first) complete and commercially distributed book published under the Open Publication License.  
 
 Marshall Poe, in his essay  " The Hive " , likens Wikipedia to the Bazaar model that Raymond defines.     Jimmy Wales himself was in fact inspired by the work (as well as arguments put forward in works prior to the Internet age, such as Friedrich Hayek's article  " The Use of Knowledge in Society " ), arguing that  " It opened my eyes to the possibility of mass collaboration " .    
 
 In 1999 Nikolai Bezroukov published two cited critical essays on Eric S. Raymond|Eric Raymond's views on open source software, the second one called  " A second look at ''The Cathedral and the Bazaar'' " .     Bezroukov, [ Open source software development as a special type of academic research: Critique of vulgar Raymondism] "  Accessed 23 May 2019.   Bezroukov, [ A second look at ''The Cathedral and the Bazaar''] Accessed 23 May 2019.      They produced a sharp response from Eric Raymond.  Eric S. Raymond, " [ Response to Nikolai Bezroukov] "  
 
 ==See also== 
 * GNU Bazaar, a distributed version control system named to highlight its relation with the  " bazaar "  model 
 *  " Homesteading the Noosphere " 
 
 ==Notes== 
  
 
 ==References== 
  
 *  
  
 
 ==External links== 
 *  
 *  
 
  
  
 
  
 Category:1997 essays 
 Category:1999 non-fiction books 
 Category:American essays 
 Category:Computer science books 
 Category:Books about free software 
 Category:O'Reilly Media books 
 Category:Software development philosophies 
 Category:Software engineering papers 
 Category:Open Publication License-licensed works 
 Category:Essays by Eric S. Raymond 
 Category:Books by Eric S. Raymond 
 Category:Scientific essays 
 Category:Linus Torvalds